<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
	<data name="dataset_empty" xml:space="preserve">
    <value>Data Sheet Must Not Be Empty</value>
  </data>
	<data name="deid_error" xml:space="preserve">
    <value>De-ID Process Failed</value>
  </data>
	<data name="deleted" xml:space="preserve">
    <value>Data Deletion Completed</value>
  </data>
	<data name="delete_project_confirm" xml:space="preserve">
    <value>Confirm that if you want to delete the project ?</value>
  </data>
	<data name="del_error" xml:space="preserve">
    <value>Data Deletion Failed</value>
  </data>
	<data name="do_deid" xml:space="preserve">
    <value>In the Process of De-Identification</value>
  </data>
	<data name="export" xml:space="preserve">
    <value>Export Data</value>
  </data>
	<data name="export_error" xml:space="preserve">
    <value>Data Export Failed</value>
  </data>
	<data name="gen_error" xml:space="preserve">
    <value>Generalization and De-ID Process Failed</value>
  </data>
	<data name="gen_job" xml:space="preserve">
    <value>Generalization is Pre-Processing，Please wait for few minute</value>
  </data>
	<data name="gen_processing" xml:space="preserve">
    <value>Generalization Pre-Processing</value>
  </data>
	<data name="import" xml:space="preserve">
    <value>Import Data</value>
  </data>
	<data name="import_not_finish" xml:space="preserve">
    <value>Data import has not been completed</value>
  </data>
	<data name="jobing" xml:space="preserve">
    <value>Job Is Ready To Excute</value>
  </data>
	<data name="job_run_error" xml:space="preserve">
    <value>Job Execution Failed</value>
  </data>
	<data name="job_save" xml:space="preserve">
    <value>Saving Job status</value>
  </data>
	<data name="job_save_error" xml:space="preserve">
    <value>Job Storage Failed</value>
  </data>
	<data name="login_failed" xml:space="preserve">
    <value>Login Failed</value>
  </data>
	<data name="no_account" xml:space="preserve">
    <value>No Account</value>
  </data>
	<data name="no_k_value" xml:space="preserve">
    <value>Please Enter K-Value</value>
  </data>
	<data name="no_r_value" xml:space="preserve">
    <value>Please Enter R-Value</value>
  </data>
	<data name="no_t1_value" xml:space="preserve">
    <value>Please Enter T1-Value</value>
  </data>
	<data name="no_t2_value" xml:space="preserve">
    <value>Please Enter T2-Value</value>
  </data>
	<data name="passwd_error" xml:space="preserve">
    <value>Incorrect Password</value>
  </data>
	<data name="project_check" xml:space="preserve">
    <value>Please Enter the Project Name</value>
  </data>
	<data name="project_create_engcheck" xml:space="preserve">
    <value>Project Name Must Consist of English and Numbers</value>
  </data>
	<data name="project_desc" xml:space="preserve">
    <value>Please Enter the  Project Description</value>
  </data>
	<data name="project_duplicate" xml:space="preserve">
    <value>Project Name Has Been Used</value>
  </data>
	<data name="project_exportpath" xml:space="preserve">
    <value>Please Enter the Project Output Path</value>
  </data>
	<data name="project_insert_error" xml:space="preserve">
    <value>Project Insert Error</value>
  </data>
	<data name="project_owner" xml:space="preserve">
    <value>Please Select a Project Manager</value>
  </data>
	<data name="project_path" xml:space="preserve">
    <value>Please Enter the Project Path</value>
  </data>
	<data name="project_status_error" xml:space="preserve">
    <value>Project Status Error</value>
  </data>
	<data name="reset_error" xml:space="preserve">
    <value>Project Reset Failed</value>
  </data>
	<data name="reset_finish" xml:space="preserve">
    <value>Project Reset Completed</value>
  </data>
	<data name="save_col_error" xml:space="preserve">
    <value>Column Information Storage Failed</value>
  </data>
	<data name="job_run" xml:space="preserve">
    <value>Job is Running</value>
  </data>
	<data name="select_dataset" xml:space="preserve">
    <value>Please Select DataSet</value>
  </data>
	<data name="k_num_check" xml:space="preserve">
    <value>K Value Must be Numerical</value>
  </data>
	<data name="updown_error" xml:space="preserve">
    <value>Numerical Interval with Upper and Lower Bound Format Error</value>
  </data>
	<data name="updown_num_error" xml:space="preserve">
    <value>Contents Must Be Numerical</value>
  </data>
	<data name="updown_up_error" xml:space="preserve">
    <value>Upper Bound Must be Greater Than or equal to the lower bound</value>
  </data>
</root>
version: '3.8'

services:
  traefik:
    container_name: traefik-reverse-proxy
    image: traefik:v2.10
    networks:
      - traefik-public
    ports:
      - 11015:8800
      #- 11011:8080 # 8080 port is traefik dashboard
      #- 80:80
      - 443:443
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./reverse_proxy_data/traefik.yml:/etc/traefik/traefik.yml
      - ./reverse_proxy_data/dynamic_conf.yml:/etc/traefik/dynamic_conf.yml
      - ./reverse_proxy_data/log:/etc/traefik/log
      - ./reverse_proxy_data/https_certificate/acme.json:/etc/traefik/acme.json
    labels:
      # middlewares
      - traefik.http.middlewares.example-redirect-to-websecure.redirectscheme.scheme=https
      - traefik.http.middlewares.example-web-www-https-redirect.redirectregex.regex=^https://(?:www.)?privacyprophet.com/(.*)
      - traefik.http.middlewares.example-web-www-https-redirect.redirectregex.replacement=https://www.privacyprophet.com/$${1}
      - traefik.http.middlewares.example-web-www-https-redirect.redirectregex.permanent=true
      - traefik.http.middlewares.example-secured.chain.middlewares=example-redirect-to-websecure,example-web-www-https-redirect
      # routers
      - traefik.http.routers.example.entrypoints=web,websecure,fastapi
      - traefik.http.routers.example.middlewares=example-secured
      - traefik.http.routers.example.rule=Host(`privacyprophet.com`) || Host(`www.privacyprophet.com`)
      - traefik.http.routers.example.tls=true
      - traefik.http.routers.example.tls.certResolver=myresolver
      - traefik.http.routers.example.tls.options=default
      - traefik.http.routers.example.service=api@internal
      # - traefik.http.services.example.loadbalancer.server.port=80
  
  fastapi:
    container_name: fastapi
    build:
      context: .
      dockerfile: Dockerfile
    restart: always
    networks:
      - traefik-public
    expose:
      - 8800
    # ports:
    # - 140.96.81.161:11015:8800
    volumes:
    - ./sftp_upload_floder:/usr/src/app/sftp_upload_floder
    - ./log:/usr/src/app/log
    - ./dockerCliCert/ca.pem:/ca.pem
    - ./dockerCliCert/cert.pem:/cert.pem
    - ./dockerCliCert/key.pem:/key.pem

    labels:
    - traefik.enable=true
    - traefik.http.routers.fastapi.rule=Host(`www.privacyprophet.com`)
    - traefik.http.routers.fastapi.tls=true
    - traefik.http.routers.fastapi.tls.certResolver=myresolver
    depends_on:
      - traefik

  redis:
    container_name: redis
    image: redis:alpine
    restart: always
    depends_on:
      - fastapi
    ports:
      - 6379:6379
    networks:
      - traefik-public


  celery:
    container_name: celery
    build:
      context: .
      dockerfile: celery_worker.dockerfile
    restart: always
    depends_on:
      - redis
    networks:
      - traefik-public
    volumes:
      - /home/privacy/deid_v2_PET/citc_v2/sourceCode/hadoop/dataMac:/home/hadoop/proj_/dataMac
      - /home/privacy/deid_v2_PET/citc_v2/sourceCode/hadoop/data_check:/home/hadoop/proj_/data_check
      - /home/privacy/deid_v2_PET/citc_v2/sourceCode/hadoop/data_error:/home/hadoop/proj_/data_error
      - /home/privacy/deid_v2_PET/citc_v2/sourceCode/hadoop/data:/home/hadoop/proj_/data
      - /home/privacy/deid_v2_PET/citc_v2/sourceCode/hadoop/final_project:/home/hadoop/proj_/final_project

  flower:
    container_name: flower
    image: mher/flower:1.2
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
    restart: always
    ports:
      - 140.96.178.108:11025:5555
    depends_on:
      - celery

networks:
  traefik-public:
    external: true